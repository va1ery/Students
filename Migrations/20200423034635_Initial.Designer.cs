// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentsDB.Models;

namespace StudentsDB.Migrations
{
    [DbContext(typeof(StudentsDBContext))]
    [Migration("20200423034635_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("StudentsDB.Models.Assignments", b =>
                {
                    b.Property<string>("AssignmentDescription")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("AssignmentId")
                        .HasColumnName("AssignmentID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnName("ClassID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Exam")
                        .HasColumnType("INTEGER");

                    b.Property<float>("MaximumPoints")
                        .HasColumnType("REAL");

                    b.Property<double?>("PercentOfGrade")
                        .HasColumnType("REAL");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("StudentsDB.Models.Classes", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnName("ClassID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("DaysAndTimes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InstructorId")
                        .HasColumnName("InstructorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<short?>("Section")
                        .HasColumnName("Section №")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Term")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<string>("Units")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<short?>("Year")
                        .HasColumnType("INTEGER");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("StudentsDB.Models.Departments", b =>
                {
                    b.Property<string>("DepartmentChairperson")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("DepartmentId")
                        .HasColumnName("DepartmentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentManager")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int?>("DepartmentNumber")
                        .HasColumnType("INTEGER");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("StudentsDB.Models.Instructors", b =>
                {
                    b.Property<string>("EmailName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Extension")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<string>("Instructor")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("InstructorId")
                        .HasColumnName("InstructorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("StudentsDB.Models.Reports", b =>
                {
                    b.Property<string>("ReportDesc")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("ReportId")
                        .HasColumnName("ReportID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReportName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("StudentsDB.Models.Results", b =>
                {
                    b.Property<int?>("AssignmentId")
                        .HasColumnName("AssignmentID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Late")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResultsId")
                        .HasColumnName("ResultsID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Score")
                        .HasColumnType("REAL");

                    b.Property<int?>("StudentId")
                        .HasColumnName("StudentID")
                        .HasColumnType("INTEGER");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("StudentsDB.Models.Students", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("EmailName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Major")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentsNames")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("StateOrProvince")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<int>("StudentId")
                        .HasColumnName("StudentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentsDB.Models.StudentsAndClasses", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnName("ClassID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Grade")
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<int>("StudentClassId")
                        .HasColumnName("StudentClassID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StudentId")
                        .HasColumnName("StudentID")
                        .HasColumnType("INTEGER");

                    b.ToTable("Students And Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
